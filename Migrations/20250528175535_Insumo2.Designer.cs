// <auto-generated />
using System;
using API_TCC.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_TCC.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250528175535_Insumo2")]
    partial class Insumo2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_TCC.Model.Agrotoxico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("data_Cadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("fornecedorID")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("qtde")
                        .HasColumnType("real");

                    b.Property<int>("tipoID")
                        .HasColumnType("int");

                    b.Property<string>("unidade_Medida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agrotoxicos");
                });

            modelBuilder.Entity("API_TCC.Model.Aplicacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("agrotoxicoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Aplicacoes");
                });

            modelBuilder.Entity("API_TCC.Model.CategoriaInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categoria_Insumo");
                });

            modelBuilder.Entity("API_TCC.Model.Colheita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("dataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colheitas");
                });

            modelBuilder.Entity("API_TCC.Model.FornecedorAgrotoxico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores_Agrotoxicos");
                });

            modelBuilder.Entity("API_TCC.Model.FornecedorInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores_Insumos");
                });

            modelBuilder.Entity("API_TCC.Model.FornecedorSemente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores_Sementes");
                });

            modelBuilder.Entity("API_TCC.Model.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("categoriaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("data_Cadastro")
                        .HasMaxLength(50)
                        .HasColumnType("datetime2");

                    b.Property<int>("fornecedorID")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("qtde")
                        .HasColumnType("real");

                    b.Property<string>("unidade_Medida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Insumos");
                });

            modelBuilder.Entity("API_TCC.Model.Lavoura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("aplicacaoID")
                        .HasColumnType("int");

                    b.Property<float>("area")
                        .HasColumnType("real");

                    b.Property<int>("colheitaID")
                        .HasColumnType("int");

                    b.Property<int>("insumoID")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("plantioID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("aplicacaoID");

                    b.HasIndex("colheitaID");

                    b.HasIndex("insumoID");

                    b.HasIndex("plantioID");

                    b.ToTable("Lavouras");
                });

            modelBuilder.Entity("API_TCC.Model.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("dataHora")
                        .HasColumnType("datetime2");

                    b.Property<int>("lavouraID")
                        .HasColumnType("int");

                    b.Property<int>("movimentacaoId")
                        .HasColumnType("int");

                    b.Property<float>("qtde")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("lavouraID");

                    b.HasIndex("movimentacaoId");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("API_TCC.Model.Plantio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("areaPlantada")
                        .HasColumnType("real");

                    b.Property<DateTime>("dataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("sementeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("sementeID");

                    b.ToTable("Plantios");
                });

            modelBuilder.Entity("API_TCC.Model.Semente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("fornecedorID")
                        .HasColumnType("int");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("qtde")
                        .HasColumnType("real");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("fornecedorID");

                    b.ToTable("Sementes");
                });

            modelBuilder.Entity("API_TCC.Model.TipoAgrotoxico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Agrotoxicos");
                });

            modelBuilder.Entity("API_TCC.Model.TipoMovimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_Movimentacoes");
                });

            modelBuilder.Entity("API_TCC.Model.Lavoura", b =>
                {
                    b.HasOne("API_TCC.Model.Aplicacao", "aplicacao")
                        .WithMany()
                        .HasForeignKey("aplicacaoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_TCC.Model.Colheita", "colheita")
                        .WithMany()
                        .HasForeignKey("colheitaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_TCC.Model.Insumo", "insumo")
                        .WithMany()
                        .HasForeignKey("insumoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API_TCC.Model.Plantio", "plantio")
                        .WithMany()
                        .HasForeignKey("plantioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("aplicacao");

                    b.Navigation("colheita");

                    b.Navigation("insumo");

                    b.Navigation("plantio");
                });

            modelBuilder.Entity("API_TCC.Model.Movimentacao", b =>
                {
                    b.HasOne("API_TCC.Model.Lavoura", "lavoura")
                        .WithMany()
                        .HasForeignKey("lavouraID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API_TCC.Model.TipoMovimentacao", "movimentacao")
                        .WithMany()
                        .HasForeignKey("movimentacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("lavoura");

                    b.Navigation("movimentacao");
                });

            modelBuilder.Entity("API_TCC.Model.Plantio", b =>
                {
                    b.HasOne("API_TCC.Model.Semente", "semente")
                        .WithMany()
                        .HasForeignKey("sementeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("semente");
                });

            modelBuilder.Entity("API_TCC.Model.Semente", b =>
                {
                    b.HasOne("API_TCC.Model.FornecedorSemente", "fornecedor")
                        .WithMany()
                        .HasForeignKey("fornecedorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fornecedor");
                });
#pragma warning restore 612, 618
        }
    }
}
